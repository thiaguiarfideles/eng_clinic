"""empty message

Revision ID: a44cc587dea6
Revises: 59904c4a8892
Create Date: 2023-11-03 10:04:36.851463

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a44cc587dea6'
down_revision = '59904c4a8892'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tipo_os',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tipo_os', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('cliente', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['id_cliente'])

    with op.batch_alter_table('material', schema=None) as batch_op:
        batch_op.alter_column('tipo_material',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('material',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('unidade_medida',
               existing_type=sa.VARCHAR(length=10),
               nullable=False)
        batch_op.alter_column('data_criacao',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('material', schema=None) as batch_op:
        batch_op.alter_column('data_criacao',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('unidade_medida',
               existing_type=sa.VARCHAR(length=10),
               nullable=True)
        batch_op.alter_column('material',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.alter_column('tipo_material',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)

    with op.batch_alter_table('cliente', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    op.drop_table('tipo_os')
    # ### end Alembic commands ###
